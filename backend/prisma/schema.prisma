// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  phoneNumber   String?   @unique
  emailVerified Boolean   @default(false)
  phoneVerified Boolean   @default(false)

  // 동의 항목 필드
  termsAgreedAt      DateTime?
  marketingAgreement Boolean   @default(false)

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  jobPostings JobPosting[]

  @@map("users")
}

// 인증번호 임시 저장을 위한 모델
model Verification {
  id        String   @id @default(cuid())
  type      String   // "EMAIL" or "SMS"
  recipient String
  code      String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([recipient, type])
  @@map("verifications")
}

// 채용 공고 프로젝트 모델 (PRJ-001)
model JobPosting {
  id        String   @id @default(cuid())
  title     String   // 프로젝트 제목
  status    String   @default("DRAFT") // DRAFT, PUBLISHED, ARCHIVED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //--- User와의 관계 설정 (Foreign Key) ---
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  //--- INP-001: 핵심 채용 정보 ---
  companyName    String? @map("company_name")
  jobType       String? @map("jobType")        // 직종
  position       String? @map("position")        // 직무
  careerLevel    String? @map("career_level")     // 경력 요건 (신입, 경력, 무관)
  employmentType String? @map("employment_type")  // 고용 형태 (정규직, 계약직)
  salaryRange    String? @map("salary_range")     // 급여 수준
  workLocation   String? @map("work_location")    // 근무지

  //--- INP-002: AI 키워드 (최대 5개 저장) ---
  keywords       String[] @default([])           // 선택된 키워드 배열 (최대 10개: AI 추천 + 사용자 입력)

  //--- INP-003: 기업 정보 ---
  companyIntro   String? @map("company_intro")    @db.Text
  companyCulture String? @map("company_culture")  @db.Text
  benefits       String? @map("benefits")         @db.Text // 복리후생 (텍스트)
  logoImageUrl   String? @map("logo_image_url")

  //--- INP-004: 스타일 설정 ---
  colorTone    String? @map("color_tone")       // "blue", "green"
  styleConcept String? @map("style_concept")    // "professional", "friendly"

  //--- INP-005: 혜택 (별도 테이블 관리 가능성 있음) ---
  selectedBenefitsJson String? @map("selected_benefits_json") @db.Text // 선택된 혜택 ID 목록 (JSON 문자열)

  //--- GEN-001/002: 생성된 결과물 ---
  generatedPosterUrl String? @map("generated_poster_url")
  generatedBannerUrl String? @map("generated_banner_url")
  generatedHtml      String? @map("generated_html")       @db.Text

  @@index([userId]) // 사용자가 자기 프로젝트 목록을 빠르게 조회하도록 인덱스 설정
  @@map("job_postings")
}

// 중소기업 취업자 지원 혜택 (INP-005)
model SmeBenefit {
  id          String   @id @default(cuid())
  name        String
  description String   @db.Text
  sourceUrl   String?  @map("source_url")
  isActive    Boolean  @default(true)
  lastChecked DateTime @updatedAt @map("last_checked")

  @@map("sme_benefits")
}
